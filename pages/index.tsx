import Head from 'next/head'
import React, { useRef, useEffect, useState } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faSpinner } from '@fortawesome/free-solid-svg-icons'
import { config, dom } from "@fortawesome/fontawesome-svg-core";
import axios, { AxiosError } from "axios";

export default function Home() {

  const [text, setText] = useState<string>("");
  const [result, setResult] = useState<string>("");
  const [parsed, setParsed] = useState<boolean>(false);
  const [loading, setLoading] = useState<boolean>(false);

  useEffect(() => {
    if (result.length !== 0) {
      setParsed(true)
    }
  }, [result]);

  const locationFrom: string[] = result.match(/.*from.*:(.*)/i) as string[];
  const locationTo: string[] = result.match(/.*to.*:(.*)/i) as string[];
  const time: string[] = result.match(/.*time.*:(.*)/i) as string[];
  const load: string[] = result.match(/.*load.*:(.*)/i) as string[];
  const weight: string[] = result.match(/.*weight.*:(.*)/i) as string[];
  const note: string[] = result.match(/.*note.*:(.*)/i) as string[];

  return (
    <>
      <Head>
        <title>Logistic order PoC</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <style>{dom.css()}</style>
      </Head>

      <main className="container">
        <h1>Parse text of a logistic order written by a human.</h1>
        <p>
          This is a proof-of-concept for extracting required text from naturally written human text using ChatGPT.
          In this example, we assume a logistics company receives orders via email from various clients and extracts the necessary data from the email, saving it to a database.
          The items to be extracted from the text include the starting location, destination, handover date and time, and details of the load and weight.
          Simply copy and paste the text into the text field and wait for the AI to parse it.
        </p>
        <textarea placeholder='Put here the tetxt' onChange={(e) => {
          setText(e.target.value)
        }}>{text}</textarea>
        <div className="align-right">
          <button className="big-button" onClick={() => {

            if (loading) return;

            setLoading(true);
            setResult("");
            setParsed(false);

            (async () => {
              let response = await axios.post("/api/parser", {
                text
              })

              setLoading(false);
              setResult(response?.data.result);

            })()

          }}>Parse text</button>
        </div>

        {parsed || loading || result ? <>
          <h2>ChatGPT answer</h2>
          <p style={{ whiteSpace: "pre-wrap" }}>
            {loading ? <FontAwesomeIcon icon={faSpinner} spin /> : null}
            {result ? result : null}
          </p>

          {parsed ? <>
            <h2>Extracted items</h2>
            <dl>
              <dt>Location From</dt>
              <dd>{locationFrom && locationFrom.length > 1 ? locationFrom[1] : " Doesn't specified."}</dd>
              <dt>Location To</dt>
              <dd>{locationTo && locationTo.length > 1 ? locationTo[1] : " Doesn't specified."}</dd>
              <dt>Date/Time</dt>
              <dd>{time && time.length > 1 ? time[1] : " Doesn't specified."}</dd>
              <dt>Load</dt>
              <dd>{load && load.length > 1 ? load[1] : " Doesn't specified."}</dd>
              <dt>Weight</dt>
              <dd>{weight && weight.length > 1 ? weight[1] : " Doesn't specified."}</dd>
              <dt>Notes</dt>
              <dd>{note && note.length > 1 ? note[1] : " Doesn't specified."}</dd>
            </dl>
          </> : null}

        </> : null}

      </main>
    </>
  )
}
